import type { Project } from "../interfaces/Project.interface" 

export const projects: Project[] = [
{
  id: "spa-heroes",
  title: "SPA Heroes",
  description: "Aplicaci√≥n de h√©roes con b√∫squeda, detalle y gesti√≥n completa de personajes.",
  longDescription:
    "SPA Heroes es una aplicaci√≥n web moderna centrada en la gesti√≥n de h√©roes. Desarrollada con React, TanStack Query y NestJS, permite explorar, buscar y editar h√©roes en una interfaz fluida tipo single-page. Incluye filtrado avanzado, paginaci√≥n, enrutamiento din√°mico y comunicaci√≥n optimizada con una API REST construida en NestJS.",
  image: "/project/SPAheroes.png",
  category: "Full Stack",
  demoUrl: "https://gerardoprogramer.github.io/heroes-app", 
  githubUrl: "https://github.com/Gerardoprogramer/heroes-app",
  technologies: [
    { name: "React", icon: "‚öõÔ∏è", color: "text-primary" },
    { name: "Vite", icon: "‚ö°", color: "text-accent" },
    { name: "TypeScript", icon: "üìò", color: "text-chart-2" },
    { name: "TanStack Query", icon: "üîÑ", color: "text-chart-3" },
    { name: "NestJS", icon: "üî•", color: "text-chart-4" },
    { name: "Vitest", icon: "üß™", color: "text-chart-5" },
  ],
  features: [
    "B√∫squeda y filtrado din√°mico de h√©roes",
    "Rutas din√°micas para detalles individuales",
    "Paginaci√≥n y b√∫squeda mediante searchParams",
    "Sincronizaci√≥n de datos y cach√© con TanStack Query",
    "Comunicaci√≥n con API REST en NestJS",
    "Dise√±o responsive con Tailwind CSS",
    "Tests unitarios con Vitest y React Testing Library",
  ],
  challenges:
    "El mayor desaf√≠o fue mantener sincronizados los estados de b√∫squeda, paginaci√≥n y datos en cach√© entre la interfaz y la API, garantizando un flujo de navegaci√≥n fluido y eficiente.",
  learnings:
    "Fortalec√≠ mis conocimientos sobre arquitectura modular entre frontend y backend, y aprend√≠ a implementar paginaci√≥n y b√∫squeda con searchParams, adem√°s de manejar el estado remoto y cach√© de datos con TanStack Query.",
}
,
 
]
